from .. import config as config
from .collect_metadata_analysis import run_functionalized_fw_and_collect_metadata as run_functionalized_fw_and_collect_metadata
from .functional_utils import _check_if_mutation_can_be_in_graph as _check_if_mutation_can_be_in_graph, are_all_mutations_hidden_from_autograd as are_all_mutations_hidden_from_autograd, are_all_mutations_under_no_grad_or_inference_mode as are_all_mutations_under_no_grad_or_inference_mode, from_fun as from_fun, has_data_mutation as has_data_mutation, has_metadata_mutation as has_metadata_mutation, is_fun as is_fun, sync_functional_tensor as sync_functional_tensor, to_fun as to_fun, was_inductor_storage_resized as was_inductor_storage_resized
from .logging_utils import setup_stacktrace_preservation_hooks as setup_stacktrace_preservation_hooks
from .schemas import AOTConfig as AOTConfig, MutationType as MutationType, OutputType as OutputType, SubclassMeta as SubclassMeta, SubclassTracingInfo as SubclassTracingInfo, ViewAndMutationMeta as ViewAndMutationMeta
from .subclass_utils import create_subclass_meta as create_subclass_meta, remap_unwrapped_subclass_arg_indices as remap_unwrapped_subclass_arg_indices, requires_subclass_dispatch as requires_subclass_dispatch, unwrap_tensor_subclasses as unwrap_tensor_subclasses, wrap_tensor_subclasses_maybe_joint as wrap_tensor_subclasses_maybe_joint
from .utils import maybe_to_fresh_input as maybe_to_fresh_input
from contextlib import contextmanager
from torch import Tensor as Tensor
from torch._decomp.decompositions_for_rng import PhiloxStateTracker as PhiloxStateTracker
from torch._guards import detect_fake_mode as detect_fake_mode
from torch._prims_common import CUDARngStateHelper as CUDARngStateHelper
from torch.fx.experimental.proxy_tensor import maybe_disable_thunkify as maybe_disable_thunkify, maybe_enable_thunkify as maybe_enable_thunkify
from torch.fx.experimental.symbolic_shapes import PropagateUnbackedSymInts as PropagateUnbackedSymInts, guard_or_true as guard_or_true, sym_eq as sym_eq
from torch.nn.utils import stateless as stateless
from typing import Any, Callable

def fn_input_mutations_to_outputs(fn: Callable, meta: ViewAndMutationMeta, keep_data_input_mutations: bool) -> Any: ...
def fn_prepped_for_autograd(fn: Callable, meta: ViewAndMutationMeta) -> Any: ...
def create_joint(fn: Callable, *, aot_config: AOTConfig) -> Any: ...
def create_functionalized_rng_ops_wrapper(func, args, trace_joint: bool = True) -> Any: ...
@contextmanager
def set_partitioner_tag(tag: str): ...
def set_partitioner_tag_is_backward(): ...
def set_partitioner_tag_must_be_in_backward(): ...
def create_functionalized_fn(fn, args, *, meta: ViewAndMutationMeta, aot_config: AOTConfig, trace_joint: bool) -> Any: ...
def handle_effect_tokens_fn(fn, args, *, meta: ViewAndMutationMeta, trace_joint: bool) -> Any: ...
def aot_dispatch_subclass(flat_fn_maybe_joint, args: list[Any], *, is_joint_structure: bool, meta: ViewAndMutationMeta, fw_only: Callable) -> SubclassTracingInfo: ...
def create_functional_call(mod, params_spec, params_len, store_orig_mod: bool = False): ...

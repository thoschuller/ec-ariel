from ..exc import UnsafeScriptObjectError as UnsafeScriptObjectError, Unsupported as Unsupported, unimplemented as unimplemented
from .base import VariableTracker as VariableTracker
from .user_defined import UserDefinedObjectVariable as UserDefinedObjectVariable
from _typeshed import Incomplete

def _raise_hard_error_if_graph_break(reason): ...

class TorchScriptObjectVariable(UserDefinedObjectVariable):
    _fake_script_object_cache: dict[int, 'TorchScriptObjectVariable']
    @classmethod
    def is_matching_cls(cls, user_cls: type): ...
    @staticmethod
    def create(proxy, value, **options): ...
    proxy: Incomplete
    source: Incomplete
    def __init__(self, proxy, value, source, **kwargs) -> None: ...
    def as_proxy(self): ...
    def var_getattr(self, tx, name: str) -> VariableTracker: ...
    def call_method(self, tx, name, args, kwargs) -> None: ...

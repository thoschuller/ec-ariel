import contextlib
import torch

__all__ = ['fallback_dispatcher', 'semi_sparse_values', 'semi_sparse_indices', 'semi_sparse_t', 'semi_sparse_view', 'semi_sparse_detach', 'semi_sparse_mm', 'semi_sparse_addmm', 'semi_sparse_linear', 'semi_sparse_scaled_mm']

def fallback_dispatcher(func, types, args, kwargs): ...
def semi_sparse_values(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_indices(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_t(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_view(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_detach(func, types, args, kwargs) -> torch.Tensor: ...
def semi_sparse_mm(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_addmm(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_linear(func, types, args=(), kwargs=None) -> torch.Tensor: ...
def semi_sparse_scaled_mm(func, types, args=(), kwargs=None) -> torch.Tensor: ...

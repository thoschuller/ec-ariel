import dataclasses
import torch
import torch._C._onnx as _C_onnx
from collections.abc import Mapping, Sequence

@dataclasses.dataclass
class ExportOptions:
    """Arguments used by :func:`torch.onnx.export`."""
    export_params: bool = ...
    verbose: bool = ...
    training: _C_onnx.TrainingMode = ...
    input_names: Sequence[str] | None = ...
    output_names: Sequence[str] | None = ...
    operator_export_type: _C_onnx.OperatorExportTypes = ...
    opset_version: int | None = ...
    do_constant_folding: bool = ...
    dynamic_axes: Mapping[str, Mapping[int, str] | Sequence[int]] | None = ...
    keep_initializers_as_inputs: bool | None = ...
    custom_opsets: Mapping[str, int] | None = ...
    export_modules_as_functions: bool | set[type[torch.nn.Module]] = ...

import sympy
from _typeshed import Incomplete

__all__ = ['SingletonInt']

class SingletonInt(sympy.AtomicExpr):
    _op_priority: int
    def __new__(cls, *args, coeff=None, **kwargs): ...
    _val: Incomplete
    _coeff: Incomplete
    def __init__(self, val, *, coeff: int = 1) -> None: ...
    def _eval_Eq(self, other): ...
    @property
    def free_symbols(self): ...
    def __mul__(self, other): ...
    def __rmul__(self, other): ...
    def __add__(self, other) -> None: ...
    def __sub__(self, other) -> None: ...
    def __truediv__(self, other) -> None: ...
    def __floordiv__(self, other) -> None: ...
    def __mod__(self, other) -> None: ...

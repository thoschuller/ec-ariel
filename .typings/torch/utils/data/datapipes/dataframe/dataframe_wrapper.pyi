from _typeshed import Incomplete
from collections.abc import Generator
from typing import Any

_pandas: Any
_WITH_PANDAS: bool | None

def _try_import_pandas() -> bool: ...
def _with_pandas() -> bool: ...

class PandasWrapper:
    @classmethod
    def create_dataframe(cls, data, columns): ...
    @classmethod
    def is_dataframe(cls, data): ...
    @classmethod
    def is_column(cls, data): ...
    @classmethod
    def iterate(cls, data) -> Generator[Incomplete, Incomplete]: ...
    @classmethod
    def concat(cls, buffer): ...
    @classmethod
    def get_item(cls, data, idx): ...
    @classmethod
    def get_len(cls, df): ...
    @classmethod
    def get_columns(cls, df): ...
default_wrapper = PandasWrapper

def get_df_wrapper(): ...
def set_df_wrapper(wrapper) -> None: ...
def create_dataframe(data, columns=None): ...
def is_dataframe(data): ...
def get_columns(data): ...
def is_column(data): ...
def concat(buffer): ...
def iterate(data): ...
def get_item(data, idx): ...
def get_len(df): ...

import weakref
from _typeshed import Incomplete
from typing import Any

class EnabledProxy:
    """Stores whether the JIT is enabled or not.

    This is just a wrapper for a bool, so that we get reference semantics
    """
    enabled: Incomplete
    def __init__(self) -> None: ...
    def parse_env(self, name, default, true_message, false_message): ...
    def __bool__(self) -> bool: ...

_enabled: Incomplete

def disable() -> None: ...
def enable() -> None: ...

_python_cu: Incomplete
_script_classes: dict[type[Any], type[Any]]
_name_to_pyclass: dict[str, type[Any]]

def _add_script_class(python_class, script_class) -> None: ...
def _get_script_class(python_class): ...
def _get_python_class(qualified_name): ...
def _clear_class_state() -> None: ...

_jit_caching_layer: weakref.WeakKeyDictionary
_jit_function_overload_caching: weakref.WeakKeyDictionary

def _try_get_jit_cached_overloads(key): ...
def _set_jit_overload_cache(key, compiled_fns) -> None: ...
def _try_get_jit_cached_function(key): ...
def _set_jit_function_cache(key, value) -> None: ...

from torch._jit_internal import FAKE_FILENAME_PREFIX as FAKE_FILENAME_PREFIX, is_optional as is_optional
from torch._sources import ParsedDef as ParsedDef, SourceContext as SourceContext
from typing import Callable

def _get_fake_filename(cls, method_name): ...
def compose_fn(cls, name: str, body_lines: list[str], signature: str) -> ParsedDef: ...
def synthesize__init__(cls) -> ParsedDef: ...
def synthesize__repr__(cls) -> ParsedDef: ...
def synthesize__hash__(cls) -> ParsedDef: ...
def synthesize_equality(cls, name: str, converse: str) -> ParsedDef: ...
def synthesize_inequality(cls, name: str, op: str, allow_eq: bool) -> ParsedDef: ...
def synthesize_comparison(cls, name: str, allow_eq: bool, raise_on_none: bool, inner: list[str]) -> ParsedDef: ...

DATACLASS_MAGIC_METHODS: dict[str, Callable]

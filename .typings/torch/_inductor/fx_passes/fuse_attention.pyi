import functools
from ..._dynamo.utils import counters as counters
from ..pattern_matcher import filter_nodes as filter_nodes, fwd_only as fwd_only, gen_register_replacement as gen_register_replacement, joint_fwd_bwd as joint_fwd_bwd
from _typeshed import Incomplete
from collections.abc import Generator

log: Incomplete
aten: Incomplete
_scaled_dot_product_attention: Incomplete

def _sfdp_pattern_1(query, key, value, inv_scale): ...
def _sfdp_replacement_1(query, key, value, inv_scale): ...
def _sfdp_pattern_2(query, key, value, scale_factor): ...
def _sfdp_replacement_2(query, key, value, scale_factor): ...
def _sfdp_pattern_3(query, key, value, inv_scale_factor, dropout_p): ...
def _sfdp_replacement_3(query, key, value, inv_scale_factor, dropout_p): ...
def _sfdp_pattern_4(query, key, value, scale_factor, dropout_p): ...
def _sfdp_replacement_4(query, key, value, scale_factor, dropout_p): ...
def _sfdp_pattern_5(query, key, value, attn_mask): ...
def _sfdp_replacement_5(query, key, value, attn_mask): ...
def _sfdp_pattern_6(query, key, value, attn_mask, dropout_p): ...
def _sfdp_replacement_6(query, key, value, attn_mask, dropout_p): ...
def _sfdp_pattern_7(query, key, value, dropout_p): ...
def _sfdp_replacement_7(query, key, value, dropout_p): ...
def _sfdp_pattern_8(query, key, value): ...
def _sfdp_replacement_8(query, key, value): ...
def _sfdp_pattern_9(query, key, value, dropout_p): ...
def _sfdp_replacement_9(query, key, value, dropout_p): ...
def _sfdp_pattern_10(query, key, value): ...
def _sfdp_replacement_10(query, key, value): ...
def _sfdp_pattern_11(query, key, value, inv_scale): ...
def _sfdp_replacement_11(query, key, value, inv_scale): ...
def _sfdp_pattern_12(query, key, value, inv_scale_factor, dropout_p): ...
def _sfdp_replacement_12(query, key, value, inv_scale_factor, dropout_p): ...
def _sfdp_pattern_13(query, key, value, dropout_p): ...
def _sfdp_replacement_13(query, key, value, dropout_p): ...
def _sfdp_pattern_14(query, key, value, attn_mask, inv_scale): ...
def _sfdp_replacement_14(query, key, value, attn_mask, inv_scale): ...
def _sfdp_pattern_15(query, key, value, attn_mask, inv_scale): ...
def _sfdp_replacement_15(query, key, value, attn_mask, inv_scale): ...
def _sfdp_pattern_16(query, key, value, attn_mask, inv_scale, dropout_p): ...
def _sfdp_replacement_16(query, key, value, attn_mask, inv_scale, dropout_p): ...
def _sfdp_pattern_17(query, key, value, attn_mask, inv_scale, dropout_p): ...
def _sfdp_replacement_17(query, key, value, attn_mask, inv_scale, dropout_p): ...
def _sfdp_pattern_18(query, key, value, causal_mask, dropout_p): ...
def _sfdp_replacement_18(query, key, value, causal_mask, dropout_p): ...
def _sfdp_pattern_19(query, key, value, causal_mask, attn_mask, dropout_p): ...
def _sfdp_replacement_19(query, key, value, causal_mask, attn_mask, dropout_p): ...
def _sfdp_pattern_20(query, key, value, attn_mask, dropout_p): ...
def _sfdp_replacement_20(query, key, value, attn_mask, dropout_p): ...
def _sfdp_pattern_21(query, key, value, attn_mask): ...
def _sfdp_replacement_21(query, key, value, attn_mask): ...
def _sfdp_pattern_22(query, key, value, attn_mask): ...
def _sfdp_replacement_22(query, key, value, attn_mask): ...
def _sfdp_pattern_23(query, key, value): ...
def _sfdp_replacement_23(query, key, value): ...
def _sfdp_params_check(match): ...
def _sfdp_extra_check(scale_factor_op=None, disable_cuda: bool = False): ...
def partialize_and_update_signature(func, **kwargs):
    """
    Equivalent to functools.partial but also updates the signature on returned function
    """
def _get_sfdp_patterns() -> Generator[Incomplete]: ...
@functools.cache
def _sfdp_init() -> None: ...

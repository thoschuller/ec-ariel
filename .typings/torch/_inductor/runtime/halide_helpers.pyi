from _typeshed import Incomplete

PHILOX_N_ROUNDS_DEFAULT: int
PHILOX_KEY_A_U32: Incomplete
PHILOX_KEY_B_U32: Incomplete
PHILOX_ROUND_A_U32: Incomplete
PHILOX_ROUND_B_U32: Incomplete

def _pair_uniform_to_normal(u1, u2):
    """Box-Muller transform"""
def _uint_to_uniform_float(x):
    """
    Numerically stable function to convert a random uint into a random float uniformly sampled in [0, 1).
    """
def philox_impl(c0, c1, c2, c3, k0, k1, n_rounds): ...
def halide_philox(seed, c0, c1, c2, c3, n_rounds): ...
def randint4x(seed, offset, n_rounds): ...
def rand4x(seed, offset, n_rounds=...): ...
def randint(seed, offset, n_rounds=...): ...
def rand(seed, offset, n_rounds=...): ...
def randn(seed, offset): ...
def randint64(seed, offset, low, high): ...

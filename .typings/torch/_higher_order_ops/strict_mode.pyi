from _typeshed import Incomplete
from torch._C import DispatchKey as DispatchKey
from torch._functorch.utils import exposed_in as exposed_in
from torch._higher_order_ops.utils import _set_compilation_env as _set_compilation_env, autograd_not_implemented as autograd_not_implemented
from torch._ops import HigherOrderOperator as HigherOrderOperator
from torch._subclasses.fake_tensor import FakeTensorMode as FakeTensorMode
from torch.fx.experimental.proxy_tensor import ProxyTorchDispatchMode as ProxyTorchDispatchMode, _temp_remove_metadata_torch_function_mode as _temp_remove_metadata_torch_function_mode, _temp_remove_pre_dispatch_torch_function_mode as _temp_remove_pre_dispatch_torch_function_mode, disable_proxy_modes_tracing as disable_proxy_modes_tracing, make_fx as make_fx, track_tensor_tree as track_tensor_tree
from torch.utils._python_dispatch import _get_current_dispatch_mode as _get_current_dispatch_mode

def strict_mode(callable, operands): ...

class StrictMode(HigherOrderOperator):
    def __init__(self) -> None: ...
    def __call__(self, callable, operands): ...

strict_mode_op: Incomplete

def strict_mode_op_dense(callable, operands): ...
def inner(mode, callable, operands): ...
def trace_strict_mode(mode, strict_mode_op, callable, operands): ...
def strict_mode_fake_tensor_mode(mode, callable, operands): ...
@strict_mode_op.py_functionalize_impl
def strict_mode_func(ctx, callable, inputs): ...

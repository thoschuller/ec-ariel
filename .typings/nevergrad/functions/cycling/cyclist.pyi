from .teampursuit import teampursuit as teampursuit
from _typeshed import Incomplete

class Cyclist:
    max_power: int
    min_power: int
    drag_coeffiecient: float
    mechanical_efficiency: float
    bike_mass: float
    fatigue_level: int
    height: Incomplete
    weight: Incomplete
    mean_maximum_power: Incomplete
    event: Incomplete
    start_position: Incomplete
    position: Incomplete
    gender: Incomplete
    current_velocity: float
    remaining_energy: Incomplete
    def __init__(self, height, weight, mean_maximum_power, event, start_position, gender) -> None: ...
    def set_pace(self, power): ...
    def follow(self, distance) -> None: ...
    def get_height(self): ...
    def get_weight(self): ...
    def get_mean_maximum_power(self): ...
    def get_remaining_energy(self): ...
    def get_position(self): ...
    def set_weight(self, weight) -> None: ...
    def set_height(self, height) -> None: ...
    def set_mean_maximum_power(self, mean_maximum_power) -> None: ...
    def set_position(self, position) -> None: ...
    def increase_fatigue(self) -> None: ...
    def recover(self) -> None: ...
    def reset(self) -> None: ...
    coefficient_drag_area: Incomplete
    def update_cda(self) -> None: ...
    total_energy: Incomplete
    def update_total_energy(self) -> None: ...

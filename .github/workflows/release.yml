name: Release

on:
  push:
    branches:
      - main
      - master
  release:
    types: [published]

jobs:
  release-drafter:
    if: github.event_name == 'push'
    name: Draft Release Notes
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Draft Release
        uses: release-drafter/release-drafter@v6.0.0
        with:
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-testpypi:
    if: github.event_name == 'push'
    name: Build and Publish to TestPyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Build package
        run: uv build --sdist --wheel
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip-existing: true

  build_wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            arch: x86_64
            runs-on: ubuntu-latest
          - os: linux
            arch: aarch64
            runs-on: ubuntu-24.04-arm
          - os: windows
            arch: amd64
            runs-on: windows-latest
          - os: macos
            arch: x86_64
            runs-on: macos-13
          - os: macos
            arch: arm64
            runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          ARIEL_COMPILE_MYPYC: "1"
          CIBW_ARCHS: ${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Build sdist
        run: uv build --sdist --out-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish_release:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: Sign and Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ariel
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload
          ${{ github.event.release.tag_name }} ./dist/*
          --repo "$GITHUB_REPOSITORY"
      - name: Remove sigstore files before publishing to PyPI
        run: rm -f dist/*.sigstore
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
